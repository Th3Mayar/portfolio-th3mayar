---
import { useTranslations, getLangFromUrl } from "@/i18n/utils";
import Button from "@/components/atoms/Button.vue";

const lang = getLangFromUrl(Astro.url);
const { home: THomeDescription } = useTranslations(lang);

const { card } = THomeDescription;
---

<script>
  import { snakeGame } from "../../functions/snake";
  document.addEventListener("DOMContentLoaded", () => {
    snakeGame();
  });
</script>

<div class="game-container gap-7">
  <div class="game-display">
    <canvas id="snakeCanvas" width="300" height="300" class="mb-5"></canvas>
    <Button id="startGameBtn" variant="orange" size="medium" disabled={false}
      >{card.startGame}</Button
    >
  </div>
  <div class="game-controls">
    <div class="instructions">
      <p>// {card.comment}</p>
      <p>// {card.commentTwo}</p>
      <div class="arrow-keys">
        <div>▲</div>
        <div>
          <span>◄</span>
          <span>▼</span>
          <span>►</span>
        </div>
      </div>
    </div>
    <div class="food-indicator">
      <p>{card.commentThree}</p>
      <div class="food-dots" id="foodDots"></div>
    </div>
    <button class="skip-btn">{card.skip}</button>
  </div>
  <div id="alert" class="alert hidden">
    <p id="alertMessage"></p>
  </div>
</div>

<style>
  body {
    background-color: #0b1521;
    font-family: "Courier New", monospace;
  }

  .game-container {
    display: flex;
    justify-content: space-between;
    padding: 20px;
    background-color: #122338;
    border-radius: 15px;
    box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.5);
    padding: 30px;
  }

  .game-display {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background-color: #0d1f33;
    padding: 20px;
    border-radius: 15px;
    position: relative;
  }

  /* Canvas and Snake */
  canvas {
    background-color: #0b1521;
    border-radius: 10px;
    box-shadow: inset 0px 0px 10px rgba(0, 0, 0, 0.5);
  }

  /* Button Styling */
  .start-btn {
    margin-top: 20px;
    background-color: var(--orangeHover);
    border: none;
    padding: 10px 20px;
    border-radius: 10px;
    color: var(--dark-foreground);
    font-weight: bold;
    cursor: pointer;
    box-shadow: 0 5px 10px rgba(255, 147, 0, 0.5);
    text-transform: uppercase;
  }

  .skip-btn {
    background-color: transparent;
    border: 1px solid white;
    padding: 5px 10px;
    margin-top: 20px;
    color: white;
    cursor: pointer;
    border-radius: 5px;
  }

  /* Instructions Styling */
  .instructions {
    & > p {
      color: #00ff00;
      font-family: "Courier New", monospace;
    }
  }

  .arrow-keys {
    display: grid;
    grid-template-columns: 1fr;
    text-align: center;
    margin-top: 10px;
    font-size: 24px;
    color: #00ff00;

    & > div {
      display: grid;
      grid-template-columns: 1fr 1fr 1fr;
    }

    & > span {
      padding: 5px;
      color: white;
      border: 1px solid #00ff00;
      border-radius: 5px;
      margin: 2px;
    }
  }

  /* Food Indicator Styling */
  .food-indicator {
    & > p {
      color: #00ff00;
      font-family: "Courier New", monospace;
    }
  }

  .food-dots {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    gap: 10px;
    margin-top: 10px;
  }

  .food-dot {
    width: 15px;
    height: 15px;
    background-color: #00ff00;
    border-radius: 50%;
    box-shadow: 0px 0px 5px #00ff00;
  }

  /* Alert styling */
  .alert {
    background-color: rgba(0, 0, 0, 0.8);
    padding: 20px;
    border-radius: 10px;
    color: white;
    text-align: center;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 1.5rem;
    z-index: 100;
    opacity: 0;
    transition: opacity 0.5s ease;

    &.show {
      opacity: 1;
    }

    &.hidden {
      opacity: 0;
      pointer-events: none;
    }
  }

  /* Confetti styling */
  .confetti {
    position: absolute;
    top: 0;
    width: 10px;
    height: 10px;
    background-color: hsl(${Math.random() * 360}, 100%, 50%);
    animation: fall linear forwards;
  }

  @keyframes fall {
    to {
      transform: translateY(100vh) rotateZ(360deg);
    }
  }
</style>
